useDynLib(wle)

#Import declaration
#importFrom(circular, circular, as.circular, is.circular, plot, density)
#import(circular)

#Export declaration

# functions
export(
# file binary.R
 binary,
# file mle.aic.R       
 mle.aic,
# file mle.cp.R
 mle.cp,
# file mle.cv.R
 mle.cv,
# file mle.stepwise.R
 mle.stepwise,
# file wle.aic.ar.R
 wle.aic.ar,
# file wle.aic.R
 wle.aic,
# file wle.ar.R
 wle.ar,
# wle.binomial.R
 wle.binomial,
# file wle.cp.R
 wle.cp,
# file wle.cv.R
 wle.cv,
# file wle.fracdiff.R
 wle.fracdiff,
# file wle.gamma.R
 wle.gamma, 
# file wle.lm.R
 wle.lm,
# file wle.normal.mixture.R
 wle.normal.mixture,
# file wle.normal.multi.R
 wle.normal.multi,       
# file wle.normal.R
 wle.normal,
# file wle.onestep.R
 wle.onestep,
# file wle.poisson.R
 wle.poisson,
# file wle.smooth.R
 wle.smooth,
# file wle.stepwise.R
 wle.stepwise,
# file wle.t.test.R
 wle.t.test,
# file wle.var.test.R
 wle.var.test,
# file wle.vonmises.R
 wle.vonmises,
# file wle.weights.R
 wle.weights, 
# file wle.wrappednormal.R
 wle.wrappednormal       
)

# unexported functions
#export(
# file mle.cv.one.R
# mle.cv.one,
# file wle.aic.ar.R
# wle.ar.wls,
# file wle.ar.R
# wle.ar.ao, wle.ar.step, wle.ar.matrix, wle.ar.start,
# file wle.cv.one.R
# wle.cv.one,
# file wle.cv.robust.bootstrap.R
# wle.cv.robust.bootstrap,  
# file wle.fracdiff.R
# wle.crossover.ao, wle.mutation.ao, wle.selection.ao,
#       wle.fitness.population.ao, wle.generate.population.ao,
#       wle.ga.ao,wle.fitness.scale.ao, wle.encode.ao, wle.decode.ao,
#       wle.fitness.ao, wle.fracdiff.ao,        
# file wle.normal.mixture.start.R
# wle.normal.mixture.start
#)

# unexported methods
# export(
# file mle.aic.R    
# summary.mle.aic, print.mle.aic, print.summary.mle.aic,
# file mle.cp.R 
# summary.mle.cp, print.mle.cp, print.summary.mle.cp,
# file mle.cv.R 
# summary.mle.cv, print.mle.cv, print.summary.mle.cv,
# file mle.stepwise.R 
# summary.mle.stepwise, print.mle.stepwise, print.summary.mle.stepwise,
# file plot.mle.cp.R
# plot.mle.cp,      
# file plot.wle.cp.R
# plot.wle.cp,
# file plot.wle.lm.R
# plot.wle.lm,
# file wle.aic.ar.R
# summary.wle.aic.ar, print.wle.aic.ar, print.summary.wle.aic.ar,       
# file wle.aic.R
# summary.wle.aic, print.wle.aic, print.summary.wle.aic,
# file wle.binomial.R
# print.wle.binomial,
# file wle.cp.R 
# summary.wle.cp, print.wle.cp, print.summary.wle.cp,      # file wle.cv.R 
# summary.wle.cv, print.wle.cv, print.summary.wle.cv,
# file wle.gamma.R
# print.wle.gamma,
# file wle.lm.R
# print.wle.lm, summary.wle.lm, print.summary.wle.lm,
# summary.wle.lm.root, print.summary.wle.lm.root, fitted.wle.lm, coef.wle.lm, weights.wle.lm, formula.wle.lm, model.frame.wle.lm,
# file wle.normal.mixture.R
# print.wle.normal.mixture,
# file wle.normal.multi.R
# print.wle.normal.multi,
# file wle.normal.R
# print.wle.normal,
# file wle.onestep.R
# print.wle.onestep,
# file wle.poisson.R
# print.wle.poisson,
# file wle.smooth.R
# print.wle.smooth,
# file wle.stepwise.R 
# summary.wle.stepwise, print.wle.stepwise, print.summary.wle.stepwise,  
# file wle.t.test.R
# print.wle.t.test,
# file wle.vonmises.R
# print.wle.vonmises,
# file wle.wrappednormal.R
# print.wle.wrappednormal
#)

#S3method declaration

#coef
S3method(coef, wle.lm)       

#fitted
S3method(fitted, wle.lm)       

#formula
S3method(formula, wle.lm)   

#model.frame
S3method(model.frame, wle.lm)
       
#plot 
S3method(plot, mle.cp)
S3method(plot, wle.cp)
S3method(plot, wle.lm)

#print
S3method(print, summary.mle.aic)
S3method(print, mle.cp)      
S3method(print, summary.mle.cp)
S3method(print, mle.cv)      
S3method(print, summary.mle.cv)
S3method(print, mle.stepwise)      
S3method(print, summary.mle.stepwise)
S3method(print, wle.aic.ar)      
S3method(print, summary.wle.aic.ar)
S3method(print, wle.aic)      
S3method(print, summary.wle.aic)
S3method(print, wle.binomial)      
S3method(print, wle.cp)      
S3method(print, summary.wle.cp)
S3method(print, wle.cv)      
S3method(print, summary.wle.cv)
S3method(print, wle.gamma)       
S3method(print, wle.stepwise)      
S3method(print, summary.wle.stepwise)
S3method(print, wle.lm)
S3method(print, summary.wle.lm)
S3method(print, summary.wle.lm.root)
S3method(print, wle.normal.mixture)
S3method(print, wle.normal.multi)
S3method(print, wle.normal)
S3method(print, wle.onestep)
S3method(print, wle.poisson)
S3method(print, wle.smooth)
S3method(print, wle.t.test)
S3method(print, wle.vonmises)
S3method(print, wle.wrappednormal)

#summary
S3method(summary, mle.aic)
S3method(summary, mle.cp)
S3method(summary, mle.cv)
S3method(summary, mle.stepwise)
S3method(summary, wle.aic.ar)      
S3method(summary, wle.aic)
S3method(summary, wle.cp)
S3method(summary, wle.cv)
S3method(summary, wle.stepwise)
S3method(summary, wle.lm)
S3method(summary, wle.lm.root)       

# weights
S3method(weights, wle.lm) 

